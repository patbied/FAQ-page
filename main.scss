$primaryColor: #444;
$backgroundColor: #0019d6;
nav.scrolled {
  -webkit-box-shadow: 0px 0px 35px 5px rgba(0, 0, 0, 0.3);
  box-shadow: 0px 0px 35px 5px rgba(0, 0, 0, 0.3);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  transition: box-shadow 200ms, height 200ms;
}
nav {
  z-index: 999;
  height: 10vh;
  background-color: $backgroundColor;
  width: 100%;
  display: flex;
  align-items: center;
  position: sticky;
  top: 0;

  // -webkit-box-shadow: 0px 0px 24px 2px white;
  // box-shadow: 0px 0px 24px 2px white;
  justify-content: space-between;
  border-bottom: black 1px solid;
  transition: box-shadow 200ms;
  a {
    color: rgb(219, 219, 219);

    position: relative;
    text-decoration: none;
    transition: 200ms;
    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */
    -moz-box-sizing: border-box; /* Firefox, other Gecko */
    box-sizing: border-box;
  }
  li {
    position: relative;
  }
  a:hover {
    color: white;
  }
  a.active {
    color: white;
  }
  a.active::after {
    content: '';
    background-color: white;
    width: 100%;
    height: 5px;
    z-index: 999;
    opacity: 1;
    position: absolute;
    transition: 200ms;
    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */
    -moz-box-sizing: border-box; /* Firefox, other Gecko */
    box-sizing: border-box;
    left: 0;
    bottom: -5;
  }
  a::after {
    content: '';
    background-color: white;
    width: 0%;
    height: 5px;
    z-index: 999;
    opacity: 0;
    position: absolute;
    transition: 200ms;
    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */
    -moz-box-sizing: border-box; /* Firefox, other Gecko */
    box-sizing: border-box;
    left: 0;
    bottom: -5;
  }

  a:hover::after {
    width: 100%;
    opacity: 1;
  }
  .navTitle {
    padding-left: 10px;
  }
  .navItems {
    font-size: 20px;
    a {
      margin: 0px 5px 0px 5px;
    }
  }
}
* {
  margin: 0;
  padding: 0;
  font-family: 'Lato', sans-serif;
}

h1 {
  padding-right: 1vw;
  color: black;
}
#askedQuestions {
  height: 50px;
  width: 39vw;
  font-size: 100%;
  border-radius: 5px;
  border: 1px solid $primaryColor;
  font-family: 'Lato', sans-serif;
  padding-left: 10px;
}

#askedQuestions:focus {
  outline: none;

  border: 1px solid $backgroundColor;
  padding-left: 10px;
}
.InputParent {
  z-index: 1;
  position: relative;
  width: 60%;
  span::after {
    position: absolute;
    content: 'Search for...';
    left: 10;
    top: 15;
    color: gray;
    opacity: 0.5;
    pointer-events: none;
    transition: transform 200ms, font-size 200ms;
  }
  #askedQuestions:focus + span::after {
    transform: translatey(-30px) translateX(-10px);

    font-size: 13px;
    color: $backgroundColor;
  }
  input:not(:placeholder-shown) + span::after {
    color: $backgroundColor;
    font-size: 13px;
    transform: translatey(-30px) translateX(-10px);
  }
  input:not(:placeholder-shown) {
    border: 1px solid $backgroundColor;
    font-size: 13px;
  }
}

datalist {
  width: 20vw;
}
.parentFAQ {
  display: flex;
  align-items: center;
}

.ParentContainer {
  display: flex;
  justify-content: center;
  height: auto;
  flex-wrap: wrap;
}
.FaqContainer:hover {
  cursor: pointer;
}
.FaqContainer {
  border-radius: 10px;
  border: 2px solid black;
  margin-bottom: 2vh;
  width: 60%;
  padding: 10px;
  a {
    color: black;
    text-decoration: none;
  }
  .Question {
    display: flex;
    justify-content: space-between;
    padding-bottom: 2vh;
  }
  .Answer {
    display: none;
  }
  .Answer.opened {
    display: block;
  }
}
.plusSVG {
  height: 25px;
  width: 25px;
  transition: 200ms;
  background-color: none;
}
.plusSVG.turn {
  transform: rotate(135deg);
}
body {
  height: 200vh;
}
*::selection {
  background: $backgroundColor; /* WebKit/Blink Browsers */
  color: white;
}
::-moz-selection {
  background: $backgroundColor; /* Gecko Browsers */
  color: white;
}
.SearchBoxForm {
  display: flex;
  padding-top: 5vh;
  align-items: center;
  justify-content: space-between;
  width: 60%;
  flex-wrap: wrap;
}
.searchBoxButton {
  margin-left: 10px;
  background-color: transparent;

  border: 2px solid $backgroundColor;
  border-radius: 5px;
  transition: 200ms;
  cursor: pointer;
}
.searchBoxButton:hover {
  background-color: $backgroundColor;
  color: white;
}
button {
  background-color: transparent;
  width: 150px;
  height: 50px;
  border: 2px solid $backgroundColor;
  border-radius: 5px;
  transition: 200ms;
  cursor: pointer;
}
button:hover {
  background-color: $backgroundColor;
  color: white;
}
.showResults {
  width: 60%;
  padding-bottom: 5px;
  text-align: left;
}
.paddingTop {
  padding-top: 10vh;
}
.formBox {
  border: 2px solid $backgroundColor;
  border-radius: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;

  padding: 5vh 0vh 5vh 0vh;
  width: 30vw;
  input {
    margin: 20px 0px 10px 0px;
    outline: none;
    padding-left: 10px;
    border: 1px solid $primaryColor;
    height: 30px;
  }
}
input:focus {
  outline: none;

  padding-left: 10px;
}

.relative {
  position: relative;
}
#firstname:focus + span::after {
  transform: translatey(-20px) translateX(-5px);

  font-size: 13px;
  color: $backgroundColor;
}
#firstnameAfter::after {
  position: absolute;
  content: 'Firstname...';
  top: 22;
  left: 8;
  color: gray;
  opacity: 0.5;
  pointer-events: none;
  transition: transform 200ms, font-size 200ms;
}
#lastname:focus + span::after {
  transform: translatey(-20px) translateX(-5px);

  font-size: 13px;
  color: $backgroundColor;
}
#lastnameAfter::after {
  position: absolute;
  content: 'Lastname...';
  top: 22;
  left: 8;
  color: gray;
  opacity: 0.5;
  pointer-events: none;
  transition: transform 200ms, font-size 200ms;
}
#email:focus + span::after {
  transform: translatey(-20px) translateX(-5px);

  font-size: 13px;
  color: $backgroundColor;
}
#emailAfter::after {
  position: absolute;
  content: 'Email...';
  top: 22;
  left: 8;

  color: gray;
  opacity: 0.5;
  pointer-events: none;
  transition: transform 200ms, font-size 200ms;
}
input:not(:placeholder-shown) + span::after {
  color: $backgroundColor;
  font-size: 13px;
  transform: translatey(-20px) translateX(-5px);
}
input:valid {
  border: 1px solid $backgroundColor;
}
.highlight {
  text-decoration: underline 1px solid $backgroundColor;
  color: $backgroundColor;
}

#username:focus + span::after {
  transform: translatey(-20px) translateX(-5px);

  font-size: 13px;
  color: $backgroundColor;
}
#usernameAfter::after {
  position: absolute;
  content: 'Username...';
  top: 22;
  left: 8;
  color: gray;
  opacity: 0.5;
  pointer-events: none;
  transition: transform 200ms, font-size 200ms;
}
#password:focus + span::after {
  transform: translatey(-20px) translateX(-5px);

  font-size: 13px;
  color: $backgroundColor;
}
#passwordAfter::after {
  position: absolute;
  content: 'Password...';
  top: 22;
  left: 8;
  color: gray;
  opacity: 0.5;
  pointer-events: none;
  transition: transform 200ms, font-size 200ms;
}
.tableContainer {
  border: 2px solid $backgroundColor;
  width: 90%;
  height: 50vh;
  text-align: center;
  overflow: scroll;
}
.marginTop {
  margin-top: 10vh;
}
td {
  padding: 8px;
  text-align: left;
}
table {
  width: 100%;
}

tr {
  outline: 2px solid $backgroundColor;
  color: $backgroundColor;
  text-align: left;
  button {
    width: 49%;
  }
}
.approve:hover {
  background-color: green;
  color: white;
}
.deny:hover {
  background-color: red;
  color: white;
}
.questionDetails {
  width: 80%;
}
.tag {
  background-color: $backgroundColor;
  color: white;
  border-radius: 15px;
  padding: 2px;
  margin: 3px 0px 3px 0px;
  white-space: nowrap;
  width: auto;
  cursor: pointer;
}
.tag:hover {
  background-color: lighten($backgroundColor, 10%);
}
.postDetails {
  text-align: right;
  width: 20%;
}
.arrow {
  height: 25px;
  width: 25px;
  transform: rotate(90deg);
  cursor: pointer;
  transition: 100ms transform;
}
.arrow.opened {
  transform: rotate(270deg);
}
.filters {
  height: 0px;
  opacity: 0;
  transition: 200ms;
}
.filters.opened {
  padding-bottom: 20px;
  opacity: 1;
}
